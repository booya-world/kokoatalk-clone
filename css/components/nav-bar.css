.nav {
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: #f9f9fa;
    padding: 20px 50px;
    box-sizing: border-box;
    border-top: 1px solid rgba(121, 121, 121, 0.2);
}
/*css는 어떻게든 내가 정한 패딩값을 지키려고 함. 따라서 width 100%가 되면 기존 박스가 100%채워진 상태에서
패딩이 들어가게 됨. 즉 css가 혼자 박스의 크기를 키움. 따라서 border-box를 씀으로서 
'굳이 패딩값 지키지 말고 기존 박스 넓이 내가 말한 대로만 해줘. 라고 해야 하는 거임*/
.nav__list {
    display: flex;
    justify-content: space-between;
}
.nav__link {
    color: #2e363e;
    padding: 20px 0px;
    position: relative;
}

@keyframes notificationAnimation {
    0%{
        transform:none;
    }
    50%{
        transform:translateY(-5px) rotateY(180deg);
    }
    100%{
        transform:none;
    }
}

.nav__notification {
    background-color: tomato;
    width: 20px;
    height: 20px;
    border-radius: 15px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-weight: 600;
    position: absolute;
    left: 15px;
    bottom: 35px;
    animation: notificationAnimation 3s ease-in-out infinite;
}
/*display: block을 하지 않은 상태에서 단순히 width와 height값을 지정하면 변화가 없음.
왜냐? span이니깐. span은 글자가 있는 부분에만 칠해주니까
그러나 display: block을 하기에는 display: flex가 의미가 없어진다. 따라서 취소*/
/*position: absolute - 메세지 아이콘 위에 숫자가 오게 함. 다만 유의할 점은 기준이 되는 것이 nav__link,
즉 메세지 아이콘이므로 nav__link에 position:relative를 적어줘야 한다*/

@keyframes appearBtnAnimation {
    from {
        opacity:0;
    }
    to {
        transform: none;
        opacity:1;
    }
}
.nav__btn {
    transform: translateY(50px);
    opacity: 0;
    animation: appearBtnAnimation 0.3s ease-in-out forwards;  
}
/*translateY를 @keyframes가 아니라 nav-btn에 넣은 것은, nav-btn이 delay값을 가지고 
있기 때문에 ...bar같은 경우, 시작할 때부터 애니가 아직 시작이 안되어 모양이 보이게 됨.
그 경우를 방지하고자 nav-btn에 넣은 것
*/

.nav__red-point {
    background-color: tomato;
    width: 5px;
    height: 5px;
    border-radius: 15px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.000000001px;
    color: tomato;
    position: absolute;
    left: 30px;
    bottom: 40px;
}
.nav__btn:nth-child(2){
    animation-delay: 0.2s;
}
.nav__btn:nth-child(3){
    animation-delay: 0.5s;
}
.nav__btn:last-child {
    animation-delay: 0.8s;
}